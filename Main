local quests = {
    ["Weak Thugs"] = {Giver = "Orsi Orfai",ID = 1},
    ["Strong Thugs"] = {Giver = "Asta",ID = 5},
    ["Wild Boar"] = {Giver = "Gauche",ID = 3},
    Bandit = {Giver = "Magna",ID = 4},
    ["Mythical Boar"] = {Giver = "Rill",ID = 5},
    ["Eye of the Midnight Sun Members"] = {Giver = "Fuegoleon Vermillion",ID = 21},
    Demon = {Giver = "Asta ",ID = 7}
}
local player = game:GetService("Players").LocalPlayer
local attack
local vu = game:GetService("VirtualUser")
local function getMob()
    local m
    local lowest = math.huge
    for i,v in pairs(workspace:GetChildren()) do
        if v.Name == mob and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local mag = (player.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
            if mag < lowest then
                lowest = mag
                m = v
            end
        end
    end
    return m
end
local mobs = {
    "Weak Thugs",
    "Strong Thugs",
    "Wild Boar",
    "Bandit",
    "Mythical Boar",
    "Eye of the Midnight Sun Members",
    "Demon"
}
local gui = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/z4gs/scripts/master/testtttt.lua"))():AddWindow("Clover Kingdom: Grimshot", {
    main_color = Color3.fromRGB(0,0,0),
    min_size = Vector2.new(373, 316),
    can_resize = false
})
local main = gui:AddTab("Main Tab")
main:AddSwitch("Mob Farm",function(bool)
    mf = bool
end)
mobsDrop = main:AddDropdown("Mobs",function(a)
    mob = a
end)
for i,v in pairs(mobs) do
    mobsDrop:Add(v)
end
spawn(function()
    while wait() do
        if mf then
            if player.QuestFolder.isDoingQuest.Value and player.Character.Humanoid.Health < 400 then
                local sky_pos = Vector3.new(0, 1000, 0)
                player.Character:MoveTo(sky_pos)
                repeat wait() until player.Character.Humanoid.Health == player.Character.Humanoid.MaxHealth
            end
            if not player.QuestFolder.isDoingQuest.Value then
                local time = 0 
                local target_pos = workspace[quests[mob].Giver].HumanoidRootPart.CFrame 
                local tween_info = TweenInfo.new(time, Enum.EasingStyle.Linear)  
                local tween = game:GetService("TweenService"):Create(player.Character.HumanoidRootPart, tween_info, {CFrame = target_pos})  
                tween:Play() 
                tween.Completed:Wait()              
                if (player.Character.HumanoidRootPart.Position - workspace[quests[mob].Giver].HumanoidRootPart.Position).Magnitude < 10 then
                    game:GetService("ReplicatedStorage").Remotes.GUIRemotes.getQuest:InvokeServer(quests[mob].ID)
                    wait(2)
                end
            elseif player.QuestFolder.isDoingQuest.Value then
                local v = getMob()
                print(v)
                if v and mf and player.QuestFolder.isDoingQuest.Value then
                    repeat wait()
                        local time = 0 
                    local target_pos = v.HumanoidRootPart.CFrame - v.HumanoidRootPart.CFrame.lookVector * 3
                    local tween_info = TweenInfo.new(time, Enum.EasingStyle.Linear) 
                    local tween = game:GetService("TweenService"):Create(player.Character.HumanoidRootPart, tween_info, {CFrame = target_pos}) 
                    tween:Play()
                    tween.Completed:Wait()
                        vu:CaptureController()
                        vu:ClickButton1(Vector2.new(-1877,-10))
                        game:GetService("ReplicatedStorage").Remotes.SkillRemote.StrongAttack:FireServer()
                    until not mf or not v:IsDescendantOf(workspace) or v.Humanoid.Health <= 0 or not player.QuestFolder.isDoingQuest.Value
            end
        end
    end
end
end)
